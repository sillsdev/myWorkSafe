<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Palaso.TestUtilities</name>
    </assembly>
    <members>
        <member name="T:Palaso.TestUtilities.TempFile">
            <summary>
            This is useful for unit tests.  When it is disposed, it will delete the file.
            </summary>
            <example>using(f = new TemporaryFile(){}</example>
        </member>
        <member name="M:Palaso.TestUtilities.TempFile.#ctor(Palaso.TestUtilities.TemporaryFolder)">
            <summary>
            Create a tempfile within the given parent folder
            </summary>
        </member>
        <member name="M:Palaso.TestUtilities.TempFile.TrackExisting(System.String)">
            <summary>
            Create a TempFile based on a pre-existing file, which will be deleted when this is disposed.
            </summary>
        </member>
        <member name="M:Palaso.TestUtilities.TempFile.WithExtension(System.String)">
            <summary>
            Use this one when it's important to have a certain file extension 
            </summary>
            <param name="extension">with or with out '.', will work the same</param>
        </member>
        <member name="M:Palaso.TestUtilities.TempFile.FromResource(System.IO.Stream,System.String)">
            <summary>
            Used to make a real file out of a resource for the purpose of testing 
            </summary>
            <param name="resource">e.g., an audio resource</param>
            <param name="extension">with or with out '.', will work the same</param>
        </member>
        <member name="M:Palaso.TestUtilities.TempFile.FromResource(System.Byte[],System.String)">
            <summary>
            Used to make a real file out of a resource for the purpose of testing 
            </summary>
            <param name="resource">e.g., a video resource</param>
            <param name="extension">with or with out '.', will work the same</param>
        </member>
        <member name="M:Palaso.TestUtilities.TempFile.MoveTo(System.String)">
            <summary>
            Used to move a file to a new path 
            </summary>
            <param name="resource">e.g., a video resource</param>
            <param name="extension">with or with out '.', will work the same</param>
        </member>
        <member name="M:Palaso.TestUtilities.TempLiftFile.TrackExisting(System.String)">
            <summary>
            Create a TempLiftFile based on a pre-existing file, which will be deleted when this is disposed.
            </summary>
        </member>
        <member name="T:Palaso.TestUtilities.TemporaryFolder">
            <summary>
            This is useful for unit tests.  When it is disposed, it works hard to empty and remove the folder.
            </summary>
            <example>using(f = new TemporaryFolder("My Export Tests"){}</example>
        </member>
        <member name="M:Palaso.TestUtilities.TemporaryFolder.TrackExisting(System.String)">
            <summary>
            Create a TemporaryFolder based on a pre-existing directory, which will be deleted when this is disposed.
            </summary>
        </member>
        <member name="M:Palaso.TestUtilities.TemporaryFolder.Combine(System.String[])">
            <summary>
            Similar to Path.Combine, but you don't have to specify the location of the temporaryfolder itself, and you can add multiple parts to combine.
            </summary>
            <example> string path = t.Combine("stuff", "toys", "ball.txt")</example>
        </member>
        <member name="P:Palaso.TestUtilities.TemporaryFolder.Path">
            <summary>
            Same as FolderPath, but I repent of that poor name
            </summary>
        </member>
    </members>
</doc>
